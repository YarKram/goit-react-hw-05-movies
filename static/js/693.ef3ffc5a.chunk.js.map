{"version":3,"file":"static/js/693.ef3ffc5a.chunk.js","mappings":"oRAOO,SAASA,IACd,OAAOC,EAAAA,EAAAA,IAAA,wBAEJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GACjB,CAEM,SAASC,EAAkBC,GAChC,OAAON,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,MAAgCL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,GACrD,CAEM,SAASI,EAAeD,GAC7B,OAAON,EAAAA,EAAAA,IAAA,iBACUM,EADV,cAEJL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKK,IAAlB,GACjB,CAEM,SAASC,EAAkBH,GAChC,OAAON,EAAAA,EAAAA,IAAA,iBACUM,EADV,cAEJL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GACjB,CAEM,SAASM,EAAmBC,GACjC,OAAOX,EAAAA,EAAAA,IAAA,+BACwBW,IAC5BV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GACjB,CA/BDJ,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBY,QAAS,mC,sHCFEC,E,OAAUC,GAAAA,EAAH,iF,SCgCpB,EA7BgB,WACd,IAAQR,GAAYS,EAAAA,EAAAA,MAAZT,QAER,GAA8BU,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRV,EAAAA,EAAAA,IAAkBH,GAASL,KAAKiB,EACjC,GAAE,CAACZ,KAGF,gCACGW,GAA8B,IAAnBA,EAAQG,SAClB,SAACP,EAAD,wDAGDI,IACC,wBACGA,EAAQI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EADE,QAUtB,C","sources":["components/api/api.jsx","pages/Reviews/Reviews.styled.js","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '35bc88dde9b859b4a96d817ba0204f80',\n};\n\nexport function fetchTrendingMovies() {\n  return axios\n    .get(`/trending/movie/day?`)\n    .then(response => response.data.results);\n}\n\nexport function fetchMovieDetails(movieId) {\n  return axios.get(`/movie/${movieId}?`).then(response => response.data);\n}\n\nexport function fetchMovieCast(movieId) {\n  return axios\n    .get(`/movie/${movieId}/credits?`)\n    .then(response => response.data.cast);\n}\n\nexport function fetchMovieReviews(movieId) {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(response => response.data.results);\n}\n\nexport function fetchMoviesByQuery(query) {\n  return axios\n    .get(`/search/movie?&query=${query}`)\n    .then(response => response.data.results);\n}\n","import styled from 'styled-components';\n\nexport const Warning = styled.p`\n  color: red;\n  font-size: 20px;\n  margin-left: 10px;\n`;\n","import { fetchMovieReviews } from 'components/api/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Warning } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews && reviews.length === 0 && (\n        <Warning>We don't have any reviews for this movie.</Warning>\n      )}\n\n      {reviews && (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["fetchTrendingMovies","axios","then","response","data","results","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews","fetchMoviesByQuery","query","api_key","Warning","styled","useParams","useState","reviews","setReviews","useEffect","length","map","id","author","content"],"sourceRoot":""}