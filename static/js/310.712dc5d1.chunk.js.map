{"version":3,"file":"static/js/310.712dc5d1.chunk.js","mappings":"oRAOO,SAASA,IACd,OAAOC,EAAAA,EAAAA,IAAA,wBAEJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GACjB,CAEM,SAASC,EAAkBC,GAChC,OAAON,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,MAAgCL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,GACrD,CAEM,SAASI,EAAeD,GAC7B,OAAON,EAAAA,EAAAA,IAAA,iBACUM,EADV,cAEJL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKK,IAAlB,GACjB,CAEM,SAASC,EAAkBH,GAChC,OAAON,EAAAA,EAAAA,IAAA,iBACUM,EADV,cAEJL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GACjB,CAEM,SAASM,EAAmBC,GACjC,OAAOX,EAAAA,EAAAA,IAAA,+BACwBW,IAC5BV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GACjB,CA/BDJ,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBY,QAAS,mC,iJCFEC,EAAeC,EAAAA,GAAAA,GAAH,+DAKZC,EAAOD,EAAAA,GAAAA,KAAH,yHAQJE,EAAQF,EAAAA,GAAAA,MAAH,8HAQLG,EAASH,EAAAA,GAAAA,OAAH,sQAcNI,EAAaJ,EAAAA,GAAAA,GAAH,4DAKVK,EAAiBL,EAAAA,GAAAA,GAAH,mM,SCc3B,EA5Ce,WACb,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAYF,EAAaG,IAAI,SAC7BC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACU,KAAdJ,GAAkC,OAAdA,KAGxBhB,EAAAA,EAAAA,IAAmBgB,GAAWzB,KAAKqB,IACnCZ,EAAAA,EAAAA,MACD,GAAE,CAACgB,IASJ,OACE,4BACE,SAACb,EAAD,sBACA,UAACE,EAAD,CAAMgB,SAVO,SAAAC,GACfA,EAAEC,iBACFR,EAAgB,CAAEd,MAAOqB,EAAEE,OAAOvB,MAAMwB,QACxCC,QAAQC,IAAIL,EAAEE,OAAOvB,MAAMwB,OAC3BH,EAAEE,OAAOI,OACV,EAKG,WACE,SAACtB,EAAD,CAAOuB,KAAK,WACZ,SAACtB,EAAD,CAAQuB,KAAK,SAAb,wBAEF,SAACtB,EAAD,UACGG,EAAOoB,KAAI,SAAAC,GACV,OACE,SAACvB,EAAD,WACE,SAAC,KAAD,CAAMwB,MAAO,CAAEC,KAAMhB,GAAYiB,GAAE,kBAAaH,EAAMI,IAAtD,SACGJ,EAAMK,SAFUL,EAAMI,GAM9B,OAEH,SAAC,KAAD,MAGL,C","sources":["components/api/api.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '35bc88dde9b859b4a96d817ba0204f80',\n};\n\nexport function fetchTrendingMovies() {\n  return axios\n    .get(`/trending/movie/day?`)\n    .then(response => response.data.results);\n}\n\nexport function fetchMovieDetails(movieId) {\n  return axios.get(`/movie/${movieId}?`).then(response => response.data);\n}\n\nexport function fetchMovieCast(movieId) {\n  return axios\n    .get(`/movie/${movieId}/credits?`)\n    .then(response => response.data.cast);\n}\n\nexport function fetchMovieReviews(movieId) {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(response => response.data.results);\n}\n\nexport function fetchMoviesByQuery(query) {\n  return axios\n    .get(`/search/movie?&query=${query}`)\n    .then(response => response.data.results);\n}\n","import styled from 'styled-components';\n\nexport const MoviesStyled = styled.h1`\n  color: black;\n  margin-left: 10px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin: 10px;\n  font-size: large;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 30px;\n  border-radius: 5px;\n  border: 1px solid black;\n  padding: 5px;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  height: 30px;\n  border-radius: 5px;\n  border: 1px solid black;\n  background-color: white;\n  cursor: pointer;\n  &:hover {\n    background-color: orangered;\n    border: 1px solid orangered;\n    color: white;\n  }\n`;\n\nexport const MoviesList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const MoviesListItem = styled.li`\n  display: block;\n  margin-bottom: 5px;\n  margin-left: 25px;\n\n  & :hover {\n    color: orangered;\n  }\n\n  & a {\n    color: black;\n    text-decoration: none;\n  }\n`;\n","import { fetchMoviesByQuery } from 'components/api/api';\nimport { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useSearchParams } from 'react-router-dom';\nimport {\n  Input,\n  MoviesStyled,\n  Form,\n  Button,\n  MoviesListItem,\n  MoviesList,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (movieName === '' || movieName === null) {\n      return;\n    }\n    fetchMoviesByQuery(movieName).then(setMovies);\n    fetchMoviesByQuery();\n  }, [movieName]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.target.query.value });\n    console.log(e.target.query.value);\n    e.target.reset();\n  };\n\n  return (\n    <div>\n      <MoviesStyled>Movies</MoviesStyled>\n      <Form onSubmit={onSubmit}>\n        <Input name=\"query\"></Input>\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      <MoviesList>\n        {movies.map(movie => {\n          return (\n            <MoviesListItem key={movie.id}>\n              <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n                {movie.title}\n              </Link>\n            </MoviesListItem>\n          );\n        })}\n      </MoviesList>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["fetchTrendingMovies","axios","then","response","data","results","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews","fetchMoviesByQuery","query","api_key","MoviesStyled","styled","Form","Input","Button","MoviesList","MoviesListItem","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","location","useLocation","useEffect","onSubmit","e","preventDefault","target","value","console","log","reset","name","type","map","movie","state","from","to","id","title"],"sourceRoot":""}