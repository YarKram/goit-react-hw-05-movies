{"version":3,"file":"static/js/328.62db896a.chunk.js","mappings":"oRAOO,SAASA,IACd,OAAOC,EAAAA,EAAAA,IAAA,wBAEJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GACjB,CAEM,SAASC,EAAkBC,GAChC,OAAON,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,MAAgCL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,GACrD,CAEM,SAASI,EAAeD,GAC7B,OAAON,EAAAA,EAAAA,IAAA,iBACUM,EADV,cAEJL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKK,IAAlB,GACjB,CAEM,SAASC,EAAkBH,GAChC,OAAON,EAAAA,EAAAA,IAAA,iBACUM,EADV,cAEJL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GACjB,CAEM,SAASM,EAAmBC,GACjC,OAAOX,EAAAA,EAAAA,IAAA,+BACwBW,IAC5BV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GACjB,CA/BDJ,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBY,QAAS,mC,sHCFEC,E,OAAWC,GAAAA,GAAH,iG,SC6CrB,EA1Ca,WACX,IAAQR,GAAYS,EAAAA,EAAAA,MAAZT,QAERU,QAAQC,IAAIX,GAEZ,OAAwBY,EAAAA,EAAAA,UAAS,MAAjC,eAAOV,EAAP,KAAaW,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRb,EAAAA,EAAAA,IAAeD,GAASL,KAAKkB,EAC9B,GAAE,CAACb,KAGF,0BACE,SAACO,EAAD,UACGL,IACC,8BACGA,EAAKa,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAChC,OACE,gBAAIC,MAAO,CAAEC,SAAU,SAAvB,WACE,gBACEC,MAAO,IACPC,OAAQ,IACRC,IACEL,EAAY,yCAC0BA,GAClC,8DAGNM,IAAKR,KAEP,wBAAKA,KACL,uCAAeC,OAbsBF,EAgB1C,SAMZ,C","sources":["components/api/api.jsx","pages/Cast/Cast.styled.js","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '35bc88dde9b859b4a96d817ba0204f80',\n};\n\nexport function fetchTrendingMovies() {\n  return axios\n    .get(`/trending/movie/day?`)\n    .then(response => response.data.results);\n}\n\nexport function fetchMovieDetails(movieId) {\n  return axios.get(`/movie/${movieId}?`).then(response => response.data);\n}\n\nexport function fetchMovieCast(movieId) {\n  return axios\n    .get(`/movie/${movieId}/credits?`)\n    .then(response => response.data.cast);\n}\n\nexport function fetchMovieReviews(movieId) {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(response => response.data.results);\n}\n\nexport function fetchMoviesByQuery(query) {\n  return axios\n    .get(`/search/movie?&query=${query}`)\n    .then(response => response.data.results);\n}\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  list-style: none;\n`;\n","import { fetchMovieCast } from 'components/api/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  console.log(movieId);\n\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    fetchMovieCast(movieId).then(setCast);\n  }, [movieId]);\n\n  return (\n    <div>\n      <CastList>\n        {cast && (\n          <>\n            {cast.map(({ id, name, character, profile_path }) => {\n              return (\n                <li style={{ maxWidth: '200px' }} key={id}>\n                  <img\n                    width={200}\n                    height={300}\n                    src={\n                      profile_path\n                        ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                        : 'https://www.memecreator.org/static/images/memes/5055235.jpg'\n                    }\n                    // src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                    alt={name}\n                  />\n                  <h2>{name}</h2>\n                  <p>Character: {character}</p>\n                </li>\n              );\n            })}\n          </>\n        )}\n      </CastList>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["fetchTrendingMovies","axios","then","response","data","results","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews","fetchMoviesByQuery","query","api_key","CastList","styled","useParams","console","log","useState","setCast","useEffect","map","id","name","character","profile_path","style","maxWidth","width","height","src","alt"],"sourceRoot":""}